name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      force_version:
        description: 'Version bump strategy (auto uses conventional commits)'
        required: false
        type: choice
        options:
          - auto
          - major
          - minor
          - patch
        default: 'auto'

jobs:
  prepare:
    name: Prepare Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        uses: ./.github/actions/setup

      - name: Configure Git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Create Release PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create release branch
          BRANCH="release/$(date +%Y%m%d-%H%M%S)"
          git checkout -b $BRANCH

          # Create empty commit to trigger release
          git commit --allow-empty -m "chore(release): ðŸ”¨ prepare for next version"
          git push origin $BRANCH

          # Get recommended version type from conventional commits
          VERSION_TYPE="${{ github.event.inputs.force_version }}"
          if [[ "$VERSION_TYPE" == "auto" ]]; then
            # Use --dry-run to see what version would be released
            VERSION_TYPE=$(pnpm release --ci --dry-run | grep -o "patch\|minor\|major" || echo "patch")
          fi

          # Create PR
          gh pr create \
            --title "chore(release): ðŸ”¨ prepare $VERSION_TYPE release" \
            --body "This PR will trigger a release when merged.

            ## Type of Release
            - $VERSION_TYPE ($(if [[ "${{ github.event.inputs.force_version }}" == "auto" ]]; then echo "determined from commits"; else echo "manually selected"; fi))

            ## Checklist
            - [ ] All tests pass
            - [ ] Documentation is up to date
            - [ ] Breaking changes are documented
            - [ ] Release notes are complete" \
            --label "release" \
            --base main \
            --head $BRANCH
